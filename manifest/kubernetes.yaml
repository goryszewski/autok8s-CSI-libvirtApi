---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-libvirt-sa

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: libvirt-sa-cluster-role
rules:
- apiGroups: [""]
  resources: 
    - "persistentvolumeclaims"
    - "persistentvolume"
  verbs: 
    - "list"
    - "watch"

- apiGroups: ["storage.k8s.io"]
  resources: 
    - "volumeattachments"
    - "storageclasses"
  verbs:
    - "list"
    - "watch"

---

apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: libvirt-sa-cluster-Binding-global
subjects:
- kind: ServiceAccount
  name: csi-libvirt-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: libvirt-sa-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-libvirt-deployment
  labels:
    app: csi-libvirt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-libvirt
  template:
    metadata:
      labels:
        app: csi-libvirt
    spec:
      serviceAccountName: csi-libvirt-sa
      containers:
        - name: external-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.0.0
          args:
            - "--csi-address=$(CSI_ENDPOINT)"
          env:
            - name: "CSI_ENDPOINT"
              value: "unix:///sock/csi.sock"
          volumeMounts:
            - mountPath: /sock
              name: sock-volume

        - name: csi-libvirt
          image: repo.internal:5000/csi-libvirt:latest
          args: 
            - "--endpoint=$(CSI_ENDPOINT)"
          env:
            - name: "CSI_ENDPOINT"
              value: "unix:///sock/csi.sock"
          volumeMounts:
            - mountPath: /sock
              name: sock-volume

  volumes:
  - name: sock-volume
    emptyDir: {}